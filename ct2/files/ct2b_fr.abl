MODULE CT2	"FAST-RAM - 23/3/2000"

"INPUTS
a24,a25,a26,a27,a28,a29,a30,a31			pin 22,21,20,14,13,12,11,10;
a03,a02,a01,a0					pin 23,24,25,26;
as						pin 19;
rw,siz1,siz0					pin 4,16,15;
cbr						pin 40;
clk32,clk50					pin 29,5;

"OUTPUTS
cbk						pin 38;
stm,ac1						pin 37,34 istype 'reg_d,buffer,keep';
ba3,ba2						pin 31,32 istype 'reg_d,buffer,keep';
ras0,ras1					pin 1,2;
cas3,cas2,cas1,cas0				pin 44,43,42,41 istype 'reg_d,buffer,keep';
we						pin 3;
berr						pin 35;
rclk3						pin 9 istype 'reg_d,buffer,keep';
rclk5",rclk1"					pin 36",33" istype 'reg_d,buffer,keep';

"NODES
rfr,rfip,rf1,rf2,rf3,rf4,rf5,rf6		node istype 'reg_d,buffer,keep';
acip,pc1					node istype 'reg_d,buffer,keep';
uu,um,lm,ll,fram,sel				node istype 'keep';
rclk0,rclk1,rclk2,rclk4,rclk6,rclk7,rclk8	node istype 'reg_d,buffer,keep';
ber2,ber1,ber0,m64				node istype 'reg_d,buffer,keep';

"SETS
qba	= [ba3,ba2];				"BURST counter
qras	= [ras0,ras1];				"RASx
qcas	= [cas3,cas2,cas1,cas0];		"CASx
qrf	= [rf1,rf2,rf3,rf4,rf5,rf6];		"Refresh Delay on Positive edge clock
qac	= [ac1];				"Delay on Positive edge clock
qrclk	= [rclk0,rclk1,rclk2,rclk3,rclk4,rclk5,rclk6,rclk7,rclk8];"Refresh counter
qberr	= [ber2,ber1,ber0];			"BUS ERROR
qpc	= [pc1];

"PROPERTIES
PLSI PROPERTY 'PRESERVE ll';
PLSI PROPERTY 'PRESERVE lm';
PLSI PROPERTY 'PRESERVE um';
PLSI PROPERTY 'PRESERVE uu';
PLSI PROPERTY 'PRESERVE fram';
PLSI PROPERTY 'PRESERVE ras0';
PLSI PROPERTY 'PRESERVE ras1';
PLSI PROPERTY 'PRESERVE cas0';
PLSI PROPERTY 'PRESERVE cas1';
PLSI PROPERTY 'PRESERVE cas2';
PLSI PROPERTY 'PRESERVE cas3';
PLSI PROPERTY 'PRESERVE stm';

PLSI PROPERTY 'Y1_AS_RESET OFF';
PLSI PROPERTY 'ISP ON';
PLSI PROPERTY 'SECURITY ON';


EQUATIONS

"-- Selections ---------------------------------------------------------
fram	= !a31 & !a30 & !a29 & !a28 & !a27 &  a26	 "$04x-$07x 64MB
	# !a31 & !a30 & !a29 & !a28 &  a27 & !a26;	 "$08x-$0Bx 64MB	

sel	= !as & a31 & a30 & a29 & a28 & !a27 & a26 & a25 & a24;   "$F7

m64.clk = clk50;
m64.d	= !sel & m64.q		
	#  sel & !rw & a0;	"BYTE Write -> F7000000=  16/32MB
				"	       F7000001= 64/128MB
uu	= rw		
	# !a01 & !a0;			
um	= rw
	# !a01 & a0			
	# !a01 & !siz0  
	# !a01 & siz1;
lm	= rw
	# a01 & !a0			
	# !a01 & a0 & !siz0
	# !a01 & !siz1 & !siz0 	
	# !a01 & siz1 & siz0;   
ll	= rw 
	# a01 & a0			
	# a01 & siz1
	# a0 & siz0 & siz1 
	# !siz0 & !siz1;

"-- 2-Bit Counter for BURST -------------------------------------------	
ba2.d	= !acip.q & a02			
	#  acip.q & !ba2.q;
ba3.d	= !acip.q & a03
	#  acip.q & !ba3.q &  ba2.q
	#  acip.q &  ba3.q & !ba2.q;
qba.clk = !acip.q & !as 			"Charge counter
	#  acip.q & !cas0.q;			"Increment counter

"-- TERMINATIONS ------------------------------------------------------
stm.clk = clk50;
!stm.d	=  rw & acip.q & fram & !as & ac1.q & stm.q	"Read  5 cycles
	# !rw & acip.q & fram & !as			"Write 4 cycles
	# !rw & sel & !as;				"M64 config	

!cbk 	= !cbr & fram & !as & !ba3.q & !ba2.q		"ADD 00
	# !cbr & fram & !as & !ba3.q &  ba2.q		"ADD 01
	# !cbr & fram & !as &  ba3.q & !ba2.q;		"ADD 10	
	
"-- EDO ACCESSES for 16/32/64/128MB -----------------------------------

qac.clk = clk50;
qac.ar	= as;
ac1.d	= acip.q & fram & !as;

!ras0	= acip.q & !a24 & !m64.q & !as		"$04   /16MB 
	# acip.q & !a27 &  a26 &  m64.q & !as	"$04-07/64MB
	# rf1.q & !rf4.q;			"ReFresh

!ras1	= acip.q &  a24 & !m64.q & !as		"$05   / 32MB
	# acip.q &  a27 & !a26 &  m64.q & !as	"$08-0B/128MB
	# rf1.q & !rf4.q;			"ReFresh

qcas.clk= clk50;
!cas0.d	= acip.q & ac1.q & ll & !as & cas0.q 	"ACcess
	# rfip.q & !rf3.q;			"ReFresh
!cas1.d	= acip.q & ac1.q & lm & !as & cas1.q
	# rfip.q & !rf3.q;
!cas2.d	= acip.q & ac1.q & um & !as & cas2.q
	# rfip.q & !rf3.q;
!cas3.d	= acip.q & ac1.q & uu & !as & cas3.q
	# rfip.q & !rf3.q; 

!we	= acip.q & !rw & fram & !as;

"-- ARBITER --------------------------------------------------------
rfip.clk= clk50;
rfip.ar	= rf6.q;			"RFIP Reset at end of RFR
rfip.d	= rfr.q & !(!as & fram)		"ReFresh Request & No ACcess
	# rfip.q;			"ReFresh Loop Lock

acip.clk= clk50;
acip.ar	= as;				"ACIP Reset at end of AS
acip.d	= !as & fram & !rfip.q & pc1.q	"ACcess & No RFIP & PC Done
	# acip.q;			"ACcess Loop Lock

qpc.clk	= !clk50;
qpc.ar	= ac1.q;
pc1.d	= !rfip.q & !acip.q
	# pc1.q;

"-- ReFresh Request ---------------------------------------------
rfr.clk	= rclk8.q;		"16us ReFresh Delay (62.5KHz)
rfr.ar 	= rf6.q;		"Exit Loop when 'In Progress'+ 1
rfr.d  	= !rfr.q;		"RFR Lock Loop

"-- ReFresh Cycle -----------------------------------------------
qrf.clk	= clk50;
qrf.ar 	= rf6.q;
rf1.d 	= rfip.q;
rf2.d	= rf1.q;
rf3.d	= rf2.q;
rf4.d	= rf3.q;
rf5.d	= rf4.q;		"END of ReFresh
rf6.d	= rf5.q;

"-- 9-Bit Counter ----------------------------------------------
qrclk.clk = clk32;
rclk0.d	= !rclk0.q;			
rclk1.d	= !rclk1.q &  rclk0.q
	#  rclk1.q & !rclk0.q;
rclk2.d	= !rclk2.q &  rclk1.q & rclk0.q
	#  rclk2.q & !rclk1.q
	#  rclk2.q & !rclk0.q;
rclk3.d	= !rclk3.q &  rclk2.q & rclk1.q & rclk0.q
	#  rclk3.q & !rclk2.q
	#  rclk3.q & !rclk1.q
	#  rclk3.q & !rclk0.q;
rclk4.d = !rclk4.q &  rclk3.q & rclk2.q & rclk1.q & rclk0.q
	#  rclk4.q & !rclk3.q
	#  rclk4.q & !rclk2.q
	#  rclk4.q & !rclk1.q
	#  rclk4.q & !rclk0.q;
rclk5.d	= !rclk5.q &  rclk4.q & rclk3.q & rclk2.q & rclk1.q & rclk0.q
	#  rclk5.q & !rclk4.q
	#  rclk5.q & !rclk3.q
	#  rclk5.q & !rclk2.q
	#  rclk5.q & !rclk1.q
	#  rclk5.q & !rclk0.q;
rclk6.d = !rclk6.q &  rclk5.q & rclk4.q & rclk3.q & rclk2.q & rclk1.q & rclk0.q
	#  rclk6.q & !rclk5.q	
	#  rclk6.q & !rclk4.q
	#  rclk6.q & !rclk3.q
	#  rclk6.q & !rclk2.q
	#  rclk6.q & !rclk1.q
	#  rclk6.q & !rclk0.q;
rclk7.d = !rclk7.q &  rclk6.q & rclk5.q & rclk4.q & rclk3.q & rclk2.q & rclk1.q & rclk0.q
	#  rclk7.q & !rclk6.q 
	#  rclk7.q & !rclk5.q
	#  rclk7.q & !rclk4.q
	#  rclk7.q & !rclk3.q
	#  rclk7.q & !rclk2.q
	#  rclk7.q & !rclk1.q
	#  rclk7.q & !rclk0.q;
rclk8.d = !rclk8.q &  rclk7.q & rclk6.q & rclk5.q & rclk4.q & rclk3.q & rclk2.q & rclk1.q & rclk0.q
	#  rclk8.q & !rclk7.q	
	#  rclk8.q & !rclk6.q 
	#  rclk8.q & !rclk5.q
	#  rclk8.q & !rclk4.q
	#  rclk8.q & !rclk3.q
	#  rclk8.q & !rclk2.q
	#  rclk8.q & !rclk1.q
	#  rclk8.q & !rclk0.q;


"-- WATCHDOG ----------------------------------------------------------------
!berr	= !as & ber2.q 		  		"AS during 10 to 12 us
	# !as & !berr;
ber0.d	= !ber0.q;			
ber1.d	= !ber1.q &  ber0.q
	#  ber1.q & !ber0.q;
ber2.d	= !ber2.q &  ber1.q & ber0.q
	#  ber2.q & !ber1.q
	#  ber2.q & !ber0.q;
qberr.clk= rclk5.q;				"2us (500Kz) delay
qberr.ar = as;					"RESET if no AS


END 

